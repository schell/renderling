on: [push]

name: push

jobs:
  renderling-build-shaders:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          # ensure the shader binaries were properly checked in
          rm -rf crates/renderling/src/linkage/*.spv
          cd shaders && cargo run --release && cd ..
          git diff --exit-code --no-ext-diff crates/renderling/src/linkage

  renderling-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          cache-on-failure: "true"
      - run: cargo clippy

  renderling-test:
    strategy:
      fail-fast: false
      matrix:
        label: [pi4, intel, amd, Windows]
    runs-on: ${{ matrix.label }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          cache-on-failure: "true"
      - run: apt-get -q -y update && apt-get -q -y install libvulkan1
        if: ${{ runner.os == 'Linux' }}
      - run: cargo test -- --test-threads=1
        env:
          RUST_BACKTRACE: 1
          RUST_LOG: trace
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output-${{ matrix.label }}
          path: test_output/**/*.png


