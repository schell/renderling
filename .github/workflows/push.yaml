on: 
  push:
    branches: 
      - main
  pull_request:

name: push

jobs:
  renderling-build-shaders:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          # ensure the shader binaries were properly checked in
          rm -rf crates/renderling/src/linkage/*.spv
          cd shaders && cargo run --release && cd ..
          git diff --exit-code --no-ext-diff crates/renderling/src/linkage

  renderling-clippy:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          cache-on-failure: "true"
      - run: cargo clippy
      
  renderling-test-windows:
    runs-on: Windows
    steps:
      - uses: actions/checkout@v2
      - uses: moonrepo/setup-rust@v1
        with: 
          channel: nightly-x86_64-pc-windows-msvc
          targets: x86_64-pc-windows-msvc
      - run: rustup show
      - run: cargo test -j 1 -- --test-threads=1
        env:
          RUST_BACKTRACE: 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output-windows
          path: test_output/**/*.png

  renderling-test:
    strategy:
      matrix:
        label: [intel, amd, pi4]
    runs-on: ${{ matrix.label }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          cache-on-failure: "true"
      - run: apt-get -q -y update && apt-get -q -y install libvulkan1
      - run: cargo test -- --test-threads=1
        env:
          RUST_BACKTRACE: 1
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-output-${{ matrix.label }}
          path: test_output/**/*.png


